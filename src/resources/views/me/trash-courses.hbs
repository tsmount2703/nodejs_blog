<head>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css" rel="stylesheet">
</head>

<form class="mt-4" method="POST" action="/courses/handles-trash-actions-forms" id="trash-checked-all-form">
  <div class="d-flex flex-row justify-content-between">
    <h3>Danh sách đã xóa</h3>
    <a href="/me/stored/courses"><i class="bi bi-arrow-return-left" style="font-size: 2rem; color:green "></i></a>
  </div>

  <div class="mt-4 d-flex gap-3 align-items-center"> 
    <div class="form-check">
      <input class="form-check-input" type="checkbox" id="checked-all-btn">
      <label class="form-check-label" for="checked-all-btn">Select All</label>
    </div>

    <select class="form-select-sm checkbox-all-select-options" required name="actions">
      <option value="">--- Choose Action ---</option>
      <option value="restore">Restore</option>
      <option value="destroy">Destroy</option>
    </select>

    <button type="submit" class="btn btn-sm btn-outline-success submit-checked-all-btn" disabled>Execute</button>
  </div>

  <table class="table mt-4">
    <thead>
      {{#if courses}}
      <tr class="text-center">
        <th scope="col"></th>
        <th scope="col">#</th>
        <th scope="col">Name</th>
        <th scope="col">Description</th>
        <th scope="col">Level</th>
        <th scope="col">Deleted Time</th>
        <th scope="col">Handle</th>
      </tr>
      {{else}}
      <tr></tr>
      {{/if}}
    </thead>
    <tbody>
      {{#each courses}}
        <tr>
          <td>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" name="coursesIds[]" value="{{this._id}}">
            </div>
          </td>
          <th scope="row">{{sum @index 1}}</th>
          <td>{{this.name}}</td>
          <td>{{this.description}}</td>
          <td>{{this.level}}</td>
          <td>{{this.deletedAt}}</td>
          <td>
            <div class="d-flex flex-row gap-2">
              <a href="#" class="btn btn-success btn-restore" data-bs-id="{{this._id}}">Restore</a>
              <a href="#" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#delete-course-modal" data-bs-id="{{this._id}}">Destroy</a>
            </div>
          </td>
        </tr>
      {{else}}
        <tr>
          <td colspan="7" class="text-center">No courses found. <a href="/me/stored/courses">Return to my courses list</a></td>
        </tr>
      {{/each}}
    </tbody>
  </table>
</form>

<!-- Modals for Restore and Destroy -->
<div class="modal fade" id="delete-course-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Clear this course ?</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">Are you sure you want to delete this course?</div>
      <div class="modal-footer">
        <button id="btn-delete" type="button" class="btn btn-danger">Delete</button>
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal" tabindex="-1" id="restore-all-forms">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Restore all courses?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to restore all selected courses?</p>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-outline-success restore-all-btn">Restore All</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal" tabindex="-1" id="destroy-all-forms">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Destroy all courses?</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to destroy all selected courses?</p>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-danger destroy-all-btn">Destroy All</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Forms for delete and restore -->
<form id="destroy-form" method="POST"></form>
<form id="restore-form" method="POST"></form>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
  const deleteCourseModal = document.getElementById('delete-course-modal');
  const deleteBtn = document.getElementById('btn-delete');
  const destroyForm = document.getElementById('destroy-form'); // Correctly refer to destroyForm
  const restoreForm = document.getElementById("restore-form");
  const restoreBtn = $('.btn-restore');
  const checkedAllBtn = document.getElementById("checked-all-btn");
  const selectedCheckBoxes = $('input[name="coursesIds[]"]');
  const submitCheckedAllBtn = $('.submit-checked-all-btn');
  const submitTrashForms = $('form[id="trash-checked-all-form"]');
  const selectedOptions = document.querySelector('.checkbox-all-select-options');
  const restoreAllBtn = document.querySelector('.restore-all-btn');
  const destroyAllBtn = document.querySelector('.destroy-all-btn');
  let courseId;


  if (deleteCourseModal) {
    deleteCourseModal.addEventListener('show.bs.modal', event => {
      const button = event.relatedTarget;
      courseId = button.getAttribute('data-bs-id');

      // When DELETE button clicked
      deleteBtn.onclick = function(e) {
        e.preventDefault();
        destroyForm.action = "/courses/" + courseId + "/force?_method=DELETE";
        destroyForm.submit();
      };
    });
  }

  // Restore button functionality
  restoreBtn.click(function(e) {
    e.preventDefault();
    let courseId = $(this).data('bs-id');
    restoreForm.action = '/courses/' + courseId + "/restore?_method=PATCH";
    restoreForm.submit();
  });

  // Handle "Select All" checkbox
  checkedAllBtn.onchange = function() {
    let isCheckedAll = $(this).prop("checked");
    $(selectedCheckBoxes).prop("checked", isCheckedAll);
    renderCheckedAllSubmitBtn();
  };

  // Handle individual checkbox changes
  selectedCheckBoxes.change(function() {
    let isChecked = selectedCheckBoxes.length === $('input[name="coursesIds[]"]:checked').length;
    $(checkedAllBtn).prop('checked', isChecked);
    renderCheckedAllSubmitBtn();
  });

  // Re-render the "Execute" button
  function renderCheckedAllSubmitBtn() {
    let isCheckedAll = $('input[name="coursesIds[]"]:checked').length;
    if (isCheckedAll > 0) {
      submitCheckedAllBtn.removeAttr("disabled");
    } else {
      submitCheckedAllBtn.attr("disabled", true);
    }
  }

  // Handle action selection (Restore/Destroy)
  selectedOptions.onchange = function() {
    const isRestored = selectedOptions.value === "restore";
    const isDestroyed = selectedOptions.value === "destroy";
    let modalId = isRestored ? "#restore-all-forms" : isDestroyed ? "#destroy-all-forms" : "";

    if (modalId) {
      submitCheckedAllBtn.attr("data-bs-toggle", "modal");
      submitCheckedAllBtn.attr("data-bs-target", modalId);
      submitCheckedAllBtn.attr("type", "button");
      (isRestored ? restoreAllBtn : destroyAllBtn).onclick = function() {
        submitTrashForms.submit();
      };
    } else {
      submitCheckedAllBtn.removeAttr("data-bs-toggle");
      submitCheckedAllBtn.removeAttr("data-bs-target");

      // Handle direct form submission
      submitTrashForms.on("submit", function(e) {
        let isSubmittable = !submitCheckedAllBtn.prop('disabled');
        if (!isSubmittable) {
          e.preventDefault();
        }
      });
    }
  };
});
</script>
